Note di aiuto per il file di configurazione

1) Multi accounts
Il supporto per più account Gmail si configura nel trigger gmail_poll aggiungendo la chiave accounts.
Nella documentazione viene spiegato che ciascun workflow può indicare diversi account con il proprio token_file e la propria query:

{
  "admin_email": "...",
  "smtp": {...},
  "workflows": [
    {
      "id": "example-zap",
      "trigger": {
        "type": "gmail_poll",
        "max_results": 50,
        "interval": 60,
        "accounts": [
          {"token_file": "token_account1.json", "query": "label:inbox is:unread"},
          {"token_file": "token_account2.json", "query": "label:inbox"}
        ]
      },
      "actions": [...]
    }
  ]
}

Ogni elemento dell’elenco accounts può specificare anche max_results se serve un valore diverso per quell’account. Le altre parti del file restano invariate.

**************

2) Query Gmail
Gli operatori di ricerca standard per Gmail permettono di raffinare le ricerche e trovare rapidamente le email desiderate. 
Questi operatori possono essere usati nella barra di ricerca di Gmail e includono: from:, to:, cc:, bcc:, subject:, e operatori di data come before: e after:. 

opzioni: 
label:inbox 
is:unread 
is:starred : 
-is:starred : il segno - server per condizione negata
has:attachment 
(-is:starred OR -has:attachment) :  raggruppa le condizioni
{-is:starred -has:attachment} : le raggruppa in modo OR implicito

Ecco alcuni esempi pratici: 
from:nome.cognome@esempio.com: Trova email inviate da un specifico indirizzo.
to:destinatario@esempio.com: Trova email inviate a un determinato destinatario.
cc:copia@esempio.com: Trova email in cui l'indirizzo è incluso nel campo "Copia conoscenza".
bcc:nascosto@esempio.com: Trova email in cui l'indirizzo è incluso nel campo "Copia conoscenza nascosta".
subject:vacanza: Trova email con la parola "vacanza" nell'oggetto.
before:2024/07/28: Trova email ricevute prima della data specificata.
after:2024/07/27: Trova email ricevute dopo la data specificata.
filename:documento.pdf: Trova email con allegati contenenti la parola "documento.pdf".
has:attachment: Trova email che contengono allegati.

Questi operatori possono essere combinati per ricerche più complesse. 
Ad esempio: 
from:amministratore@esempio.com subject:aggiornamento before:2024/07/20 
cercherà email inviate dall'indirizzo amministratore con "aggiornamento" nell'oggetto, ricevute prima del 20 luglio 2024. 

**************
3) get_gmail_token.py requests the following scopes by default:

* `https://www.googleapis.com/auth/drive.metadata.readonly` – needed for basic
  Drive listing operations.
* `https://www.googleapis.com/auth/gmail.readonly` – allows reading messages for
  the polling and archive actions.

* `https://www.googleapis.com/auth/drive.file` which grants read/write access to files that PyZap uploads to your Drive.
  To use the `gmail_archive` action you must also include
 

Edit the `SCOPES` list in `get_gmail_token.py` if additional permissions are required. See Google's
[OAuth 2.0 scopes documentation]
(https://developers.google.com/identity/protocols/oauth2/scopes)
(https://developers.google.com/workspace/drive/api/guides/api-specific-auth?hl=it)
for reference.

**************
4) Trigger e azioni di excel_watch

Il modulo pyzap/plugins/excel_watch.py contiene diversi trigger e azioni dedicate ai file Excel.

ExcelRowAddedTrigger – rileva le nuove righe aggiunte al workbook
Parametri rilevanti: file (obbligatorio), sheet, filters, start_row, state_file

ExcelCellChangeTrigger – attiva quando le colonne monitorate cambiano valore
Parametri: file, sheet, columns, start_row, state_file

ExcelFileUpdatedTrigger – si attiva quando cambia la data di modifica del file
Parametri: file (obbligatorio), state_file

ExcelAttachmentRowTrigger – simile a excel_row_added, ma restituisce solo le righe in cui la colonna indicata contiene un allegato. Parametro aggiuntivo: attachment_column

Azioni presenti nello stesso modulo:

ExcelWriteRowAction – crea o aggiorna una riga
Parametri: file (obbl.), sheet, row

EmailSendAction – invia email via SMTP
Parametri: host, port, username, password, from_addr, to_addr, subject, body

DBSaveAction – salva i dati in un database SQLite
Parametri: db (obbl.), table

FileCreateAction – genera un file di testo/CSV/JSON a partire dai dati
Parametri: path (obbl.), format (txt, json, csv)

AttachmentDownloadAction – scarica file indicati nella riga
Parametri: dest (obbl.), rename opzionale

**************
5) Azione pdf_split

Il file pyzap/plugins/pdf_split.py definisce l’azione PDFSplitAction, che divide un PDF in più file.

Parametri:
output_dir (obbligatorio), pattern per determinare i punti di split, name_template (predefinito split_{index}.pdf), regex_fields per estrarre campi dal testo

**************
6) Elenco Azione pdf_split

L’azione legge pdf_path dal payload e produce un elenco di file generati in data["files"]

Trigger

gmail_poll

Parametri di configurazione: token_file, query, max_results (opzionale), accounts (lista di configurazioni per più caselle)

Payload in uscita: per ogni messaggio Gmail vengono restituiti id, dati completi del messaggio e il campo aggiuntivo token_file

imap_poll

Parametri di configurazione: host, username, password, mailbox (default INBOX), search (default UNSEEN)

Payload in uscita: lista di dizionari con id, subject, from, body

excel_poll

Parametri di configurazione: file (percorso workbook), sheet (opzionale), filters (opzionale), state_file, start_row

Payload in uscita: righe nuove con id (numero riga) e values (lista valori)

excel_row_added

Parametri di configurazione: come excel_poll più filtri avanzati (regex, gt, gte, lt, lte)

Payload in uscita: righe nuove con id e values

excel_cell_change

Parametri di configurazione: file, sheet, columns, state_file, start_row

Payload in uscita: righe in cui le colonne monitorate cambiano, con id e values

excel_file_updated

Parametri di configurazione: file, state_file

Payload in uscita: id con timestamp di modifica e file percorso del workbook

excel_attachment_row

Parametri di configurazione: come excel_row_added più attachment_column

Payload in uscita: righe che contengono allegati con campi id, values e attachments

Action

gmail_archive

Parametri: token_file, drive_folder_id o local_dir, token, save_message, save_attachments, download_links, attachment_types

Payload in ingresso: richiede id del messaggio

Payload in uscita: dizionario con datetime, sender, subject, summary, attachments, storage_path, attachment_paths

imap_archive

Parametri: host, username, password, mailbox, drive_folder_id o local_dir, token, save_attachments

Payload in ingresso: richiede id del messaggio

Payload in uscita: datetime, sender, subject, summary, attachments, storage_path

excel_append

Parametri: file, sheet, fields (opzionale), max_message_length (opzionale)

Payload in ingresso: può contenere values oppure i campi indicati in fields

Nessun payload di ritorno (scrive sul file Excel).

excel_write_row

Parametri: file, sheet (opzionale), row (opzionale)

Payload in ingresso: utilizza values oppure tutti i valori del dizionario passato.

Nessun payload di ritorno.

email_send

Parametri: host, port, username, password, from_addr, to_addr, subject, body

Payload in ingresso: se assenti in params, può usare to, subject o body dal payload

Nessun payload di ritorno.

db_save

Parametri: db, table (default data)

Payload in ingresso: qualsiasi dizionario; i campi diventano colonne della tabella.

Nessun payload di ritorno.

file_create

Parametri: path, format (txt, json, csv)

Payload in ingresso: dati da scrivere nel file.

Nessun payload di ritorno.

attachment_download

Parametri: dest, rename (opzionale)

Payload in ingresso: deve contenere attachments (lista di URL o percorsi)

Payload in uscita: stesso payload con campo aggiuntivo downloaded (percorsi dei file)

gdrive_upload

Parametri: folder_id, token (opzionale, altrimenti da env GDRIVE_TOKEN)

Payload in ingresso: file_path o content, opzionalmente filename

Nessun payload di ritorno.

pdf_split

Parametri: output_dir, pattern, name_template, regex_fields, table_fields

Payload in ingresso: richiede pdf_path (o attachment_paths)

Payload in uscita: files (elenchi di PDF creati) e, se presenti, records con i dati estratti

sheets_append

Parametri: sheet_id, range, token, fields (opzionale)

Payload in ingresso: deve fornire values oppure i campi indicati in fields

Nessun payload di ritorno.

slack_notify

Parametri: webhook_url

Payload in ingresso: text o message con il contenuto della notifica.

Nessun payload di ritorno.

Questi sono tutti i trigger e le action presenti nel progetto, con i rispettivi parametri e la struttura dei dati che producono o consumano.